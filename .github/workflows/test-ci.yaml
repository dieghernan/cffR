on:
  workflow_dispatch:
  schedule:
      - cron:  '0 5 * * 2,5'


name: Test on GHA

jobs:
  test-ci:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release'}
          - {os: macOS-10.15, r: 'release'}
          #- {os: ubuntu-20.04, r: 'release'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-pandoc@v1

      - uses: r-lib/actions/setup-r@v1
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v1
        with:
          cache-version: 10
          extra-packages: |
            devtools
            remotes
            tidymodels
            tidyverse
            ctv

      - name: Install core packages of all views and rOpenSci
        run: |
          # Install core packages of all views
          options(repos = c(
            CRAN = "https://cloud.r-project.org"
          ))
          allviews <- ctv::available.views()


          packs <- lapply(seq_len(length(allviews)), function(x) {
            allviews[[x]]$packagelist
          })

          packs <- dplyr::bind_rows(packs)
          core <- dplyr::filter(packs, core == TRUE)

          # rOpenSci packages from r-universe

          options(repos = c(
            ropensci = "https://ropensci.r-universe.dev",
            CRAN = "https://cloud.r-project.org"
          ))

          ropensci <- unlist(jsonlite::read_json("https://ropensci.r-universe.dev/packages"))

          # R-lib packages
          rlib <- unlist(jsonlite::read_json("https://r-lib.r-universe.dev/packages"))

          # R-forge packages
          rforge <- unlist(jsonlite::read_json("https://r-forge.r-universe.dev/packages"))

          # R-Studio packages
          rstudio <- unlist(jsonlite::read_json("https://rstudio.r-universe.dev/packages"))

          all <- sort(unique(c(core$name, ropensci, rlib, rforge, rstudio)))

          # Check packages not installed yet
          instpack <- as.character(installed.packages()[, "Package"])

          toinstall <- setdiff(all, instpack)

          install.packages(toinstall,
            dependencies = TRUE,
            verbose = TRUE, quiet = TRUE,
            type = "binary"
          )


          # Update
          update.packages(type = "binary")

          # Malformed CITATION
          remove.packages(c("photosearcher"))

        shell: Rscript {0}


      - name: Test GHA
        run: |

          # Load package
          devtools::load_all()

          # Run the tests
          testthat::test_dir("tests/testthat/test_ci")

        shell: Rscript {0}

      - name: Display results
        run: |
          cat(paste(
            readLines("tests/testthat/test_ci/_snaps/full_cff.md"),
            collapse = "\n"
          ))

        shell: Rscript {0}

     # Upload artifact
      - uses: actions/upload-artifact@v2
        with:
          name: test-ci-${{ runner.os }}
          path: |
            tests/testthat/test_ci/_snaps/full_cff.md
            tests/testthat/test_ci/allpackages.csv
