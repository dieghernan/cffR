on:
  workflow_dispatch:
  schedule:
      - cron:  '0 5 * * 2,5'


name: Test on GHA

jobs:
  test-ci:
    runs-on: windows-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-pandoc@v1

      - uses: r-lib/actions/setup-r@v1
        with:
          use-public-rspm: true
          install-r: false

      # This is needed for workflows running on
      # ubuntu-20.04 or later
      - name: Install V8
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install -y libv8-dev

      - uses: r-lib/actions/setup-r-dependencies@v1
        with:
          cache-version: 900
          extra-packages: |
            devtools
            remotes
            tidymodels
            tidyverse
            ctv

      - name: Install core packages of all views and rOpenSci
        run: |
          # Install core packages of all views
          allviews <- ctv::available.views()


          packs <- lapply(seq_len(length(allviews)), function(x) {
            allviews[[x]]$packagelist
          })

          packs <- dplyr::bind_rows(packs)
          core <- dplyr::filter(packs, core == TRUE)

          # rOpenSci packages from r-universe

          options(repos = c(
            ropensci = "https://ropensci.r-universe.dev",
            CRAN = "https://cloud.r-project.org"
          ))

          ropensci <- unlist(jsonlite::read_json("https://ropensci.r-universe.dev/packages"))

          all <- sort(unique(c(core$name, ropensci)))

          # Check packages not installed yet
          instpack <- as.character(installed.packages()[, "Package"])
          
          toinstall <- setdiff(all, instpack)
          
          install.packages(toinstall, dependencies = TRUE, 
                           verbose = TRUE, quiet = TRUE, type="binary")
          
          
        shell: Rscript {0}


      - name: Test GHA
        run: |

          # Load package
          devtools::load_all()

          # Run the tests
          testthat::test_dir("tests/testthat/test_ci")

        shell: Rscript {0}

     # Upload artifact
      - uses: actions/upload-artifact@v2
        with:
          name: test-ci
          path: tests/testthat/test_ci
