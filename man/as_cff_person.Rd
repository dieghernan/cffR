% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/as_cff_person.R, R/methods.R
\name{as_cff_person}
\alias{as_cff_person}
\alias{as.person.cff_pers}
\alias{as.person.cff_pers_list}
\title{Coerce strings or \link[utils:person]{person} objects to \code{\link{cff}} objects}
\usage{
as_cff_person(person)

\method{as.person}{cff_pers}(x)

\method{as.person}{cff_pers_list}(x)
}
\arguments{
\item{person}{It can be either:
\itemize{
\item A \code{person} or list of \code{person} object created with \code{\link[utils:person]{utils::person()}}.
\item A \code{character} object or vector representing a person or persons.
See \strong{Examples}.
}}

\item{x}{A \code{cff_pers} or \code{cff_pers_list} object.}
}
\value{
\code{as_cff_person()} returns an object of classes \verb{"cff_pers_list", "cff"}
according to the \code{definitions.person} or \code{definitions.entity} specified in
the \href{https://github.com/citation-file-format/citation-file-format/blob/main/schema-guide.md}{Citation File Format schema}.
Each element of the \verb{"cff_pers_list", "cff"} object would have classes
\verb{"cff_pers", "cff"}. Learn more about the \CRANpkg{cffr} class system in
\link{cff_class}.

\code{as.person.cff_pers()} / \code{as.person.cff_pers_list()} returns a
\code{\link[utils:person]{person}} object.
}
\description{
Create a list of \code{definitions.person} or \code{definitions.entity} as defined by
the
\href{https://github.com/citation-file-format/citation-file-format/blob/main/schema-guide.md}{Citation File Format schema}
from different sources.

\code{\link[=as_cff_person]{as_cff_person()}} can convert the following objects:
\itemize{
\item Objects with class \code{person} as provided by \code{\link[utils:person]{utils::person()}}.
\item A \code{character} string with the definition of an author or several authors,
using the standard BibTeX notation. See Markey (2007) for a full
explanation.
}

The inverse transformation (\code{cff_pers / cff_pers_list} to
\code{\link[utils:person]{person}}) object can be done through the
\code{as.person.cff_pers()} / \verb{as.person().cff_pers_list()} methods.

The output also can printed on BibTeX markup via the corresponding
\code{\link[=toBibtex.cff_pers]{toBibtex()}} methods.
}
\details{
\code{\link[=as_cff_person]{as_cff_person()}} would recognize if the input should be converted using the
CFF reference for \code{definition.person} or \code{definition.entity}.

\code{as_cff_person()} uses a custom algorithm that tries to break a name as
explained in Section 11 of "Tame the BeaST" (Markey, 2007) (see also
Decoret, 2007):
\itemize{
\item \verb{First von Last}.
\item \verb{von Last, First}.
\item \verb{von Last, Jr, First}.
}

Mapping is performed as follows:
\itemize{
\item \code{First} is mapped to the CFF field \code{given-names}.
\item \code{von} is mapped to the CFF field \code{name-particle}.
\item \code{Last} is mapped to the CFF field \code{family-names}.
\item \code{Jr} is mapped to the CFF field \code{name-suffix}.
}

In the case of entities, the whole \code{character} would be mapped to \code{name}.
It is a good practice to "protect" entity's names with \code{{}}:

\if{html}{\out{<div class="sourceCode r">}}\preformatted{# Don't do
entity <- "Elephant and Castle"
as_cff_person(entity)
#> - name: Elephant
#> - name: Castle

# Do
entity_protect <- "\{Elephant and Castle\}"
as_cff_person(entity_protect)
#> - name: Elephant and Castle
}\if{html}{\out{</div>}}

\code{as_cff_person()} would try to add as many information as possible.
On \code{character} string coming from \code{\link[utils:person]{format(person())}} the
email and the ORCID would be gathered as well.
}
\examples{
# Create a person object
a_person <- person(
  given = "First", family = "Author",
  role = c("aut", "cre"),
  email = "first.last@example.com", comment = c(
    ORCID = "0000-0001-8457-4658",
    affiliation = "An affiliation"
  )
)

a_person

cff_person <- as_cff_person(a_person)

# Class cff_pers_list / cff
class(cff_person)

# With each element with class cff_pers / cff
class(cff_person[[1]])

# Print
cff_person

# Back to person object with S3 Method
as.person(cff_person)

# Coerce a string
a_str <- paste0(
  "Julio Iglesias <fake@email.com> ",
  "(<https://orcid.org/0000-0001-8457-4658>)"
)
as_cff_person(a_str)

# Several persons
persons <- c(
  person("Clark", "Kent", comment = c(affiliation = "Daily Planet")),
  person("Lois", "Lane"), person("Oscorp Inc.")
)

a_cff <- as_cff_person(persons)

a_cff

# Printed as Bibtex thanks to the method
toBibtex(a_cff)

# Or as person object
as.person(a_cff)


# Or you can use BibTeX style if you prefer

x <- "Frank Sinatra and Dean Martin and Davis, Jr., Sammy and Joey Bishop"

as_cff_person(x)

as_cff_person("Herbert von Karajan")

toBibtex(as_cff_person("Herbert von Karajan"))
}
\references{
\itemize{
\item Patashnik, Oren. "BIBTEXTING" February 1988.
\url{https://osl.ugr.es/CTAN/biblio/bibtex/base/btxdoc.pdf}.
\item Markey, Nicolas. "Tame the BeaST"
\emph{The B to X of BibTeX, Version 1.4} (October 2007).
\url{https://osl.ugr.es/CTAN/info/bibtex/tamethebeast/ttb_en.pdf}.
\item Decoret X (2007). "A summary of BibTex."\url{https://maverick.inria.fr/~Xavier.Decoret/resources/xdkbibtex/bibtex_summary.html#names}
}

See \strong{Examples} for more information.
}
\seealso{
Examples in \code{vignette("cffr", "cffr")} and \code{\link[utils:person]{utils::person()}}.

Learn more about the \CRANpkg{cffr} class system in \link{cff_class}.

Other functions for converting between \strong{R} classes:
\code{\link{as_bibentry}()},
\code{\link{as_cff}()}

Other \strong{S3 Methods}:
\code{\link{as_bibentry}()},
\code{\link{as_cff}()},
\code{\link{cff_class}}
}
\concept{coercing}
\concept{s3method}
