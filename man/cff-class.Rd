% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/docs.R
\name{cff-class}
\alias{cff-class}
\title{The \code{cff} class}
\description{
\subsection{The \code{cff} class}{

\strong{cffr} implements a S3 object with \code{\link[=class]{class()}} \code{cff}, that it is used to
represent the information of a \verb{*.cff} file in \strong{R}.

Under the hood, a \code{cff} object is simply a named \code{\link[=list]{list()}} to which we added
additional methods, most notably \code{\link[=print]{print()}}.

\if{html}{\out{<div class="sourceCode r">}}\preformatted{a_named_list <- list(
  first = "I", second = "am", third = "a", fourth = "list",
  fifth = "with", sixth = "names", "none" = NULL
)


dput(a_named_list)
#> list(first = "I", second = "am", third = "a", fourth = "list", 
#>     fifth = "with", sixth = "names", none = NULL)

# Default print
a_named_list
#> $first
#> [1] "I"
#> 
#> $second
#> [1] "am"
#> 
#> $third
#> [1] "a"
#> 
#> $fourth
#> [1] "list"
#> 
#> $fifth
#> [1] "with"
#> 
#> $sixth
#> [1] "names"
#> 
#> $none
#> NULL

# But
a_cff_object <- as.cff(a_named_list)

class(a_cff_object)
#> [1] "cff"

a_cff_object
#> first: I
#> second: am
#> third: a
#> fourth: list
#> fifth: with
#> sixth: names

dput(a_cff_object)
#> structure(list(first = "I", second = "am", third = "a", fourth = "list", 
#>     fifth = "with", sixth = "names"), class = "cff")
}\if{html}{\out{</div>}}

\code{\link[=as.cff]{as.cff()}} not only converts a \code{\link[=list]{list()}} to \code{cff} but also removes items (known
as \code{keys} in CFF terminology) that are \code{NULL} or \code{NA}.
}

\subsection{Valid \code{cff} objects}{

Although \code{a_cff_object} is a \code{cff} object, it is not valid, since it does not
comply with the validation rules of the CFF specification.

\if{html}{\out{<div class="sourceCode r">}}\preformatted{cff_validate(a_cff_object)
#> == Validating cff ==============================================================
#> x Oops! This <cff> has the following errors:
#> * cff.authors: is required
#> * cff["cff-version"]: is required
#> * cff.message: is required
#> * cff.title: is required
}\if{html}{\out{</div>}}

\code{\link[=cff_validate]{cff_validate()}} gives minimal messages of what's wrong with our \code{cff} and
(invisibly) returns the result of the validation (\code{TRUE/FALSE}).
}

\subsection{Other methods}{
\subsection{\code{\link[=as.data.frame]{as.data.frame()}}}{

\if{html}{\out{<div class="sourceCode r">}}\preformatted{minimal_cff <- cff()

minimal_cff
#> authors:
#> - family-names: Doe
#>   given-names: John
#> cff-version: 1.2.0
#> message: If you use this software, please cite it using these metadata.
#> title: My Research Software

as_df <- as.data.frame(minimal_cff)

class(as_df)
#> [1] "data.frame"

t(as_df)
#>                         [,1]                                                            
#> authors.00.family_names "Doe"                                                           
#> authors.00.given_names  "John"                                                          
#> cff_version             "1.2.0"                                                         
#> message                 "If you use this software, please cite it using these metadata."
#> title                   "My Research Software"
}\if{html}{\out{</div>}}
}

}

\subsection{\code{\link[=c]{c()}}}{

\if{html}{\out{<div class="sourceCode r">}}\preformatted{new_keys <- c("date-released" = "2020-01-31", abstract = "Minimal example")

c(minimal_cff, new_keys)
#> authors:
#> - family-names: Doe
#>   given-names: John
#> cff-version: 1.2.0
#> message: If you use this software, please cite it using these metadata.
#> title: My Research Software
#> date-released: '2020-01-31'
#> abstract: Minimal example
}\if{html}{\out{</div>}}
}
}
\keyword{internal}
